name: Deploy Docker App to VPS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Setup SSH access to VPS
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy and Run Docker on VPS
        run: |
          ssh -t ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
            set -e

            # Go to app directory
            cd ~/repo/ncs-assessment || (mkdir -p ~/repo/ncs-assessment && cd ~/repo/ncs-assessment)

            # Pull latest changes or clone repo
            if [ -d .git ]; then
              echo "Pulling latest changes..."
              git pull origin main
            else
              echo "Cloning repository..."
              git clone https://github.com/freelancer0319/ncs-assessment .
            fi

            # Ensure Node.js (LTS) and npm are installed
            if ! command -v npm &> /dev/null; then
              echo "Installing Node.js and npm..."
              curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
              sudo apt-get install -y nodejs
            fi

            # Ensure pnpm is installed
            if ! command -v pnpm &> /dev/null; then
              echo "Installing pnpm..."
              npm install -g pnpm
            fi

            # Install dependencies if pnpm-lock.yaml changed or node_modules doesn't exist
            if [ ! -d "node_modules" ] || [ "pnpm-lock.yaml" -nt "node_modules" ]; then
              echo "Installing dependencies..."
              pnpm install
            fi

            # Run build script
            echo "Running build:production script..."
            npm run build:production

            # Stop existing containers
            echo "Stopping existing containers..."
            docker compose down || true

            # Build and start containers
            echo "Building and starting Docker containers..."
            docker compose up -d --build

            # Wait a moment for containers to start
            sleep 10

            # Show container status
            echo "Container status:"
            docker compose ps

            # Show logs for ncs-backend
            echo "ncs-backend logs:"
            docker logs ncs-backend --tail 50

          EOF
